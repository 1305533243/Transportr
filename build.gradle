buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:2.3.2'
		classpath files('libs/gradle-witness.jar')
	}
}

apply plugin: 'com.android.application'
apply plugin: 'witness'

dependencies {
	def supportVersion = '25.3.1'
	compile "com.android.support:appcompat-v7:$supportVersion"
	compile "com.android.support:design:$supportVersion"
	compile "com.android.support:cardview-v7:$supportVersion"
	compile "com.android.support:recyclerview-v7:$supportVersion"
	compile "com.android.support:preference-v14:$supportVersion"
	compile 'com.android.support.constraint:constraint-layout:1.0.2'

	compile 'com.github.orangegangsters:swipy:1.2.3'
	compile 'de.cketti.library.changelog:ckchangelog:1.2.2'
	compile 'org.apmem.tools:layouts:1.10' // https://android-developers.googleblog.com/2017/02/build-flexible-layouts-with.html
	compile 'com.mikepenz:materialdrawer:5.9.2'
	compile 'com.mikepenz:aboutlibraries:5.9.6'
	compile 'com.mikepenz:fastadapter-commons:2.5.3@aar'
	compile 'org.osmdroid:osmdroid-android:5.6.1'
	compile 'uk.co.samuelwall:material-tap-target-prompt:1.10.0'
	compile ('com.mapbox.mapboxsdk:mapbox-android-sdk:5.0.2@aar') {
		transitive = true
	}
	compile 'com.google.dagger:dagger:2.11'
	annotationProcessor 'com.google.dagger:dagger-compiler:2.11'

	compile(project(':sublibs:public-transport-enabler:enabler')) {
		exclude group: 'org.json' // provided by Android
		exclude group: 'net.sf.kxml' // provided by Android
	}
	debugCompile 'org.slf4j:slf4j-api:1.7.21'
	debugCompile 'com.github.tony19:logback-android-core:1.1.1-6'
	debugCompile('com.github.tony19:logback-android-classic:1.1.1-6') {
		exclude group: 'com.google.android', module: 'android'
	}

	debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
	releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
	testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}

dependencyVerification {
	verify = [
			'com.android.support:appcompat-v7:ac1ebbc46589195dda3e0b1becfe410bafd75bdf3edd1cd9acf04850f3895830',
			'com.android.support:design:a3e83064fe99d0a4369f9b46d8bfbe77d0c3022fffdee4be3ac3857b87cc89e3',
			'com.android.support:cardview-v7:defc17032ffa600a82e1c7d96bb574aa5ed64e2b57e28414a245da7d6db0c666',
			'com.android.support:recyclerview-v7:375974a8724e359d97d77fa8522c614f813a3ac4583c1807f154a3f9a054b0a1',
			'com.android.support:preference-v14:970904d676ea886d0be459e7e5e36c0db650daefea5bbe80cc59146091905be5',
			'com.android.support.constraint:constraint-layout:b0c688cc2b7172608f8153a689d746da40f71e52d7e2fe2bfd9df2f92db77085',
			'com.github.orangegangsters:swipy:153d03ab51b7c3672e0dfb60963dc4b983c3bf0fd39adbff576cd5179b8edbda',
			'de.cketti.library.changelog:ckchangelog:e113de0f4bc42b983dd6b690b67d76f29975167c2204e3792831961740889d78',
			'org.apmem.tools:layouts:25f878e7faa5c384ed0861889104e5f10a40e5682eaf80c9abb47559c367b348',
			'com.mikepenz:materialdrawer:030c51b2ca97378b09dddaf21961ede6106c5a6f176d06c805b96679b142d342',
			'com.mikepenz:aboutlibraries:7ed9676ebf9b388de45c43c514b3b82b3a507e63cc4834b7b0cfc7039314edeb',
			'com.mikepenz:fastadapter-commons:43eb876014d40daaabdd2dfe4eb8dd4772edac08023503448272eb873529b552',
			'org.osmdroid:osmdroid-android:e64a97b8302a50bedf6c4c6ff024291008f72103b17a728801132ebdce0492ed',
			'uk.co.samuelwall:material-tap-target-prompt:3cdecbd8d391a7bda411f3edbbc7da5be5d781544f90e2f9e427e6465f54a66c',
			'com.mapbox.mapboxsdk:mapbox-android-sdk:4a2b26b33fc8cc1f7a55a828f69f6d3a0a61f3c0b1230155266d923163cc200e',
			'com.google.dagger:dagger:1e9fe8a7ba7ca663449cda3e4f973511aa4593dbecd93ef3eb2476ef98082f08',
			'com.android.support:support-annotations:aedf76962584adfaed2bd3fcaa22406461c4310237fc27e301128edaa2dba2fa',
			'com.android.support:support-v4:07d389154bcf73b47e514964df1578136b26cba78257b8a577a3ccb54beff0ae',
			'com.android.support:support-vector-drawable:13728f337f36d1c02d52198a6c20724edb447a0875454d829f95cb9eb4aa293b',
			'com.android.support:animated-vector-drawable:4bc46edf1946b32d518b41416d1734e915e0cbb28021de3b340527419b070691',
			'com.android.support:transition:36c688825a8c0e6e879e18886de83dc90673322822d5b606ee302f70fb558e16',
			'com.android.support:support-compat:e02d781268dc60aab6638d8dc20156ea11ca20b962d294b85e6f1e8418cabfa7',
			'com.android.support:support-core-ui:6182278a6653e6c111c888963626cbb16f2d0022571cb239760475119e0b92a8',
			'com.android.support:preference-v7:b37d8193c65cf8eb3c4ba9cbfc6d5c96042177901622717fb089290bef784a58',
			'com.android.support.constraint:constraint-layout-solver:8c62525a9bc5cff5633a96cb9b32fffeccaf41b8841aa87fc22607070dea9b8d',
			'com.mikepenz:materialize:7add9fff9ccc20e4bbc508b7d2727594369def95d9ca58c620503cf0d1ee67f1',
			'com.mikepenz:iconics-core:e1c4e3b6200acfca71af0698d140fa63a57a6ce6b61c0eac4a8325766ca87bc7',
			'com.mikepenz:fastadapter:178441f46d7f911301978f4753cc628c92eb3e44468071e8b2c23286dbfa794d',
			'com.jakewharton.timber:timber:d553d3d3e883ce7d061f1b21b95d6ee0840f3bfbf6d3bd51c5671f0b0f0b0091',
			'com.mapzen.android:lost:c9f4eca5d37c05b455c2333a127ecf6f92c73d1567447d7ade2a34bb7b11ddad',
			'com.mapbox.mapboxsdk:mapbox-java-geojson:da1b8769a75d1c06835cfa446c4097e8774ab6f4415c20f2cf74fb5472c1f632',
			'com.mapbox.mapboxsdk:mapbox-android-telemetry:a1c5b69902db964575772375884b2b189f0b3c2e1336d1f6103a8837d6f7f520',
			'javax.inject:javax.inject:91c77044a50c481636c32d916fd89c9118a72195390452c81065080f957de7ff',
			'com.squareup.okhttp3:logging-interceptor:88d04693ab3109b549149b38abf96530bf6ee97f38c0dc72aa73560ef30d953d',
			'com.google.guava:guava:36a666e3b71ae7f0f0dca23654b67e086e6c93d192f60ba5dfd5519db6c288c8',
			'org.slf4j:slf4j-api:1d5aeb6bd98b0fdd151269eae941c05f6468a791ea0f1e68d8e7fe518af3e7df',
			'com.google.code.findbugs:jsr305:bec0b24dcb23f9670172724826584802b80ae6cbdaba03bdebdef9327b962f6a',
			'com.mapbox.mapboxsdk:mapbox-java-core:245fb12f4a0a04c5a894e7e66cd1aa056a77c6251cebf7d0c618248aec240e1b',
			'com.google.code.gson:gson:c6221763bd79c4f1c3dc7f750b5f29a0bb38b367b81314c4f71896e340c40825',
			'com.android.support:support-media-compat:cbed07d07e0e84fdb4b75712f5fd946229a8af155933c9a92e41db64d00791e0',
			'com.android.support:support-core-utils:32fac02eb2c20a77fa3e3bc3ede62392a19613f72b8f8e10f5dfa84bb4c89ea1',
			'com.android.support:support-fragment:541d6393c1e024453aca2a14f31bea0c7270ff4e2a02783f3528aa426367444d',
			'com.squareup.okhttp3:okhttp:19e1db51787716ff0046fa19e408fb34ed32a6274baa0c07475bf724b4eb6800',
			'com.squareup.okio:okio:734269c3ebc5090e3b23566db558f421f0b4027277c79ad5d176b8ec168bb850',
	]
}

allprojects {
	repositories {
		jcenter()
	}
}

android {
	defaultConfig {
		versionCode 48
		versionName "2.0.0-preview1"

		compileSdkVersion 25
		targetSdkVersion 25
		buildToolsVersion "25.0.2"
		minSdkVersion 15
	}

	buildTypes {
		release {
			resValue "string", "app_name", "Transportr"
			shrinkResources true
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
		}

		debug {
			applicationIdSuffix ".debug"
			versionNameSuffix "-debug"
			resValue "string", "app_name", "Transportr Devel"
			shrinkResources true
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
		}
	}

	dexOptions {
		preDexLibraries !project.hasProperty('buildServer')
		javaMaxHeapSize "1g"
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			resources.srcDirs = ['src']
			aidl.srcDirs = ['src']
			renderscript.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
		}
	}

	/*
	* To sign release build, create file gradle.properties in ~/.gradle/ with this content:
	*
	* signingStoreLocation=/home/key.store
	* signingStorePassword=xxx
	* signingKeyAlias=alias
	* signingKeyPassword=xxx
	*/
	if (project.hasProperty('signingStoreLocation') &&
			project.hasProperty('signingStorePassword') &&
			project.hasProperty('signingKeyAlias') &&
			project.hasProperty('signingKeyPassword')) {
		println "Found sign properties in gradle.properties! Signing buildâ€¦"

		signingConfigs {
			release {
				storeFile file(signingStoreLocation)
				storePassword signingStorePassword
				keyAlias signingKeyAlias
				keyPassword signingKeyPassword
			}
		}

		buildTypes.release.signingConfig = signingConfigs.release
		buildTypes.debug.signingConfig = signingConfigs.release
	} else {
		buildTypes.release.signingConfig = null
	}

	lintOptions {
		abortOnError !project.hasProperty('buildServer')
		checkReleaseBuilds false
		disable 'MissingTranslation', 'InvalidPackage'
	}

}
